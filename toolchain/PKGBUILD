pkgname="${_target}-gcc"
pkgver="13.2.0"
pkgrel=1
pkgdesc="${_target} gcc cross-toolchain"
arch=('x86_64')
makedepends=('docker')
options=(!strip !buildflags staticlibs)
license=('GPL')
source=("run.sh" "${_target}.config")
md5sums=('SKIP' 'SKIP')

prepare() {
  cp ${srcdir}/run.sh run2.sh
  mv run2.sh run.sh
  cp "${_target}.config" .config
  mkdir -p "${startdir}/ccache"
}

package() {
  mkdir -p ${pkgdir}/opt/x-tools
  docker run -ti --rm -v ${pkgdir}/opt/x-tools:/opt/x-tools -v ${srcdir}:/mnt/build -v "${startdir}/ccache":/mnt/ccache debian:x-toolchain /bin/bash -c "cd /mnt/build && ./run.sh"
  if [[ ${_cpu} = "arm" ]]
  then 
      _cpuf="armhf" 
  else
      _cpuf="${_cpu}" 
  fi
  if [[ ${_os} = *"musl"* ]] 
  then
    rm -rf "${pkgdir}${_prefix}/${_target}/lib"/*
    mv "${pkgdir}${_prefix}/${_target}/sysroot/lib"/* "${pkgdir}${_prefix}/${_target}/lib"
    rmdir "${pkgdir}/${_prefix}/${_target}/sysroot/lib"
    ln -s "${_prefix}/${_target}/lib" "${pkgdir}${_prefix}/${_target}/sysroot/lib"
    rm "${pkgdir}${_prefix}/${_target}/lib/ld-musl-${_cpuf}.so.1"
    ln -s "${_prefix}/${_target}/sysroot/usr/lib/libc.so" "${pkgdir}${_prefix}/${_target}/lib/ld-musl-${_cpuf}.so.1"
    ln -s "${_prefix}/${_target}/sysroot/usr/lib/libc.so" "${pkgdir}${_prefix}/bin/${_target}-ldd"
  fi
}

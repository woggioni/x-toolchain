# $Id$
# Maintainer: Pierre Schmitz <pierre@archlinux.de>

pkgname="${_target}-openssl"
_basename="${pkgname#${_target}-}"
_ver=3.1.3
# use a pacman compatible version scheme
pkgver=${_ver/[a-z]/.${_ver//[0-9.]/}}
#pkgver=$_ver
pkgrel=1
pkgdesc='The Open Source toolkit for Secure Sockets Layer and Transport Layer Security'
arch=('x86_64')
url='https://www.openssl.org'
license=('custom:BSD')
options=(!buildflags staticlibs)
depends=('perl' "${_target}-zlib" "${_target}-gcc")
makedepends=("${_target}-configure")
optdepends=("${_target}-ca-certificates")
backup=("${_prefix:1}/${_target}/sysroot/etc/ssl/openssl.cnf")
source=(
  "https://www.openssl.org/source/${_basename}-${_ver}.tar.gz"{,.asc}
  'ca-dir.patch'
)
sha256sums=('f0316a2ebd89e7f2352976445458689f80302093788c466692fb2a188b2eacf6'
            'SKIP'
            '0a32d9ca68e8d985ce0bfef6a4c20b46675e06178cc2d0bf6d91bd6865d648b7')
validpgpkeys=('8657ABB260F056B1E5190839D9C4D26D0E604491'
              '7953AC1FBC3DC8B3B292393ED5E9E43F7DF9EE8C'
              'A21FAB74B0088AA361152586B8EF1A6BA9DA2D5C'
              'EFC0A467D613CB83C7ED6D30D894E2CE8B3D79F5')

prepare() {
	cd "$srcdir/$_basename-$pkgver"
  if [[ ${_os} == linux* ]]
  then
  	# set ca dir to /etc/ssl by default
	  patch -Np1 -i "$srcdir/ca-dir.patch"
  fi
}


build() {

  if [[ ${_os} == linux* ]]; then
    local _additional_gcc_flags="-Wa,--noexecstack" 
    if [[ ${_cpu} == "x86_64" ]]; then
      local _platform="linux-x86_64"
      local _optflags='enable-ec_nistp_64_gcc_128'
    elif [[ ${_cpu} == "arm" ]]; then
      local _platform="linux-generic32"
    else
      local _platform="linux-generic32"
    fi
    local _rpath="-Wl,-rpath=${_prefix}/${_target}/sysroot/lib:${_prefix}/${_target}/sysroot/usr/lib"
    local _dynamic_linker=$(echo "${_prefix}/${_target}"/lib/ld-*.so*)
    export LDFLAGS="${_rpath} -Wl,-dynamic-linker=${_dynamic_linker}"
  elif [[ ${_os} == mingw* ]]; then
    if [[ ${_cpu} == x86_64 ]]
    then
        local _platform="mingw64"
    elif [[ ${_cpu} == i686 ]]
    then
        local _platform="mingw"
    else
        echo "Unsupported cpu for Windows build: ${_cpu}"
        exit 1
    fi
    local _optflags="-DOPENSSL_NO_CAPIENG"
    export CFLAGS="-pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
  fi
  cd "${srcdir}/openssl-$_ver"
    mkdir -p "${srcdir}/build-${_target}" && cp -a "${srcdir}/openssl-$_ver/"* "${srcdir}/build-${_target}" && cd "${srcdir}/build-${_target}"
   	# mark stack as non-executable: http://bugs.archlinux.org/task/12434
    _configure_params=(
      --prefix=${_prefix}/${_target}/sysroot/usr
      --cross-compile-prefix=${_target}-
      --openssldir=/etc/ssl
      --libdir=lib
      shared
      no-ssl3-method
      zlib-dynamic
      ${_optflags} \
      ${_platform} \
      ${_additional_gcc_flags} ${CPPFLAGS} ${CFLAGS} ${LDFLAGS}
    )
  	./Configure ${_configure_params[@]}
    make depend 
    make
}

package() {
    cd "${srcdir}/build-${_target}"
    make DESTDIR="${pkgdir}" MANDIR="${_prefix}/${_target}/sysroot/usr/share/man" MANSUFFIX=ssl install_sw
}

strip() {
    ${_target}-strip $@
}
export -f strip

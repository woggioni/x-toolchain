# $Id$
# Maintainer:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>
# Contributor: judd <jvinet@zeroflux.org>
pkgname="${_target}-ncurses"
_basename="${pkgname#${_target}-}"
_pkgver=6.5
pkgver=${_pkgver/-/+}
pkgrel=1
pkgdesc='System V Release 4.0 curses emulation library'
arch=('x86_64')
url='http://invisible-island.net/ncurses/ncurses.html'
license=(MIT)
options=(staticlibs !buildflags)
depends=("${_target}-gcc")
makedepends=("${_target}-configure")
source=(
  $_basename::git+https://github.com/ThomasDickey/ncurses-snapshots.git?signed#tag=v${pkgver/./_}
  $_basename-6.3-libs.patch
  $_basename-6.3-pkgconfig.patch
)
sha512sums=('da9a9e6227d14deef580785b49ab366e9b1c99890c1dd428a566572d01a7fc7da1ed110c9a80047ce6dee813f4dadf37ba43f8048c43b0ab6074a10b0c4b4ef2'
            'adb02b838c40f1e58a1b31c26d5cd0f2a1c43f3b6d68e839981764c0f6c905a9eb51dd36ff018628fdeb20747cc7467727d57135408ab4848259384077a52b28'
            '2d2c0ec3c880e638ab4aa3dbff5e28e4cd233153e24816bd87e077f848aa3edd5114cd0f2a7f6e8869dd1861a2746e512886c18264ff1676927dcc320c5ef958')
b2sums=('c0c577b633d74838d109b30ea387c10fce70fb7fea548f4f965d508dc0fc1efd2ef45a81f5c5cc960a236ccee0e3aa1d4d99d0b666692c9b5bfcdd75bad604a0'
        '31bb10e82dd018a75e57252052650d9f0f5eb5e7e887118c2ea40032b11f59ec6aa4d9bae804c615cbecdf3382f3434e0c9e9e8440fdefe66a507be020b8965c'
        'fb6cf606cf3db7f6b306272696a63bce83d52cfa91e850f9a7bdb9d3d8455a26943529a9cf79731dddc7f763c27211a9afab9c4c31dbb6d12fd720eb390eb0a3')
validpgpkeys=('19882D92DDA4C400C22C0D56CC2AF4472167BE03')  # Thomas Dickey <dickey@invisible-island.net>


prepare() {
  # do not link against test libraries
  patch -Np1 -d $_basename -i ../$_basename-6.3-libs.patch
  # do not leak build-time LDFLAGS into the pkgconfig files:
  # https://bugs.archlinux.org/task/68523
  patch -Np1 -d $_basename -i ../$_basename-6.3-pkgconfig.patch
  # NOTE: can't run autoreconf because the autotools setup is custom and ancient
}


build() {
  cd $srcdir/${_basename}

  if [[ ${_os} == mingw32* ]]
  then
      ${_target}-configure \
        --with-pkg-config-libdir="${_prefix}/${_target}/sysroot/usr/lib/pkgconfig" \
        --program-prefix="" \
        --without-ada \
        --with-cxx \
        --without-shared \
        --without-pthread \
        --enable-pc-files \
        --disable-rpath \
        --enable-colorfgbg \
        --enable-ext-colors \
        --enable-ext-mouse \
        --disable-symlinks \
        --enable-warnings \
        --enable-assertions \
        --disable-home-terminfo \
        --enable-database \
        --enable-sp-funcs \
        --enable-term-driver \
        --enable-interop \
        --enable-widec .
  else
    ${_target}-configure \
        --with-pkg-config-libdir="${_prefix}/${_target}/sysroot/usr/lib/pkgconfig" \
        --program-prefix="" \
        --with-shared \
        --with-normal \
        --without-debug \
        --without-ada \
        --disable-stripping \
        --enable-widec \
        --enable-pc-files \
        --with-cxx-binding \
        --with-cxx-shared \
        --with-termlib=tinfo \
        --with-ticlib=tic .
  fi
  make
}

package() {
  cd ${pkgname##${_target}-}
  make DESTDIR="$pkgdir" install
  #rm "${pkgdir}${_prefix}/${_target}/lib/terminfo"
  # fool packages looking to link to non-wide-character ncurses libraries
  for lib in ncurses ncurses++ form panel menu; do
    echo "INPUT(-l${lib}w)" > "${pkgdir}/${_prefix}/${_target}/sysroot/usr/lib/lib${lib}.so"
    ln -s ${lib}w.pc "$pkgdir/${_prefix}/${_target}/sysroot/usr/lib/pkgconfig/${lib}.pc"
  done

  # don't require -ltinfo when linking with --no-add-needed
  rm -f "${pkgdir}${_prefix}/${_target}/sysroot/usr/lib/libncursesw.so"
  echo "INPUT(libncursesw.so.${pkgver:0:1} -ltinfo)" > "${pkgdir}${_prefix}/${_target}/sysroot/usr/lib/libncursesw.so"

  # some packages look for -lcurses during build
  echo "INPUT(-lncursesw)" > "${pkgdir}/${_prefix}/${_target}/sysroot/usr/lib/libcursesw.so"
  ln -s libncurses.so "${pkgdir}/${_prefix}/${_target}/sysroot/usr/lib/libcurses.so"
}

strip() {
    ${_target}-strip $@
}
export -f strip